# Last update September 2023 (rlh)
server:
  port: 8072

eureka:
  instance:
    preferIpAddress: true
    instanceId: ${spring.application.name}:${random.int}
    hostname: gateway-service
  client:
    healthcheck:
      enabled: true         # this must be true because it is a service
    serviceUrl:
      defaultZone: http://eureka-service:8070/eureka/
    registerWithEureka: true
    fetchRegistry: false      # this must be false because it is a service

spring:
  cloud:
    config:
      uri: http://config-server:8071
    loadbalancer:
      ribbon:
        enabled: false
    gateway:
      server:
        webflux:
          # This is for automatic mapping of routes using eureka
          discovery:
            locator:
              enabled: true
              lowerCaseServiceId: true
  data:
    redis: # Redis is used by storing in memory all the request per user and therefore
      # limit to a maximum request per user per second(e.g., 10 request per second)
      connect-timeout: 2s       # time limit for a connection to be established
      host: ailegorreta-redis   # local default Redis host
      port: 6379                # local default Redis port
      timeout: 1s               # Time limit for a response to be received

# Testing what environment we are using
gateway:
  greeting: "Welcome to gateway microservice from the config server, 'local configuration'."